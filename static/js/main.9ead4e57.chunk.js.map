{"version":3,"sources":["components/organisms/bubbles/molecules/comment/style.module.css","components/organisms/title/style.module.css","components/organisms/bubbles/molecules/comment_image_button/style.module.css","components/organisms/bubbles/atoms/vertical_line/style.module.css","components/templates/tutorial/style.module.css","components/organisms/toolbar/style.module.css","components/organisms/toolbar/atoms/button_container/style.module.css","components/organisms/toolbar/molecules/color_selector/style.module.css","components/organisms/toolbar/molecules/open_button/style.module.css","components/templates/editor/style.module.css","components/organisms/bubbles/style.module.css","components/organisms/bubbles/atoms/image_button/style.module.css","components/organisms/bubbles/molecules/bubble/style.module.css","components/organisms/bubbles/molecules/commented_bubble/style.module.css","components/organisms/bubbles/atoms/horizontal_line/style.module.css","components/organisms/routes/atoms/corner_button_container/style.module.css","components/organisms/tutorial/atoms/paragraph/style.module.css","components/organisms/title/index.js","components/organisms/toolbar/atoms/button_container/index.js","components/organisms/toolbar/molecules/color_selector/index.js","components/organisms/toolbar/molecules/new_button/index.js","components/organisms/toolbar/molecules/open_button/index.js","components/organisms/toolbar/molecules/save_button/index.js","components/organisms/toolbar/molecules/print_button/index.js","components/organisms/toolbar/index.js","components/organisms/bubbles/atoms/image_button/index.js","components/organisms/bubbles/molecules/comment_image_button/index.js","components/organisms/bubbles/molecules/comment/index.js","components/organisms/bubbles/molecules/bubble/index.js","components/organisms/bubbles/atoms/vertical_line/index.js","components/organisms/bubbles/molecules/commented_bubble/index.js","components/organisms/bubbles/atoms/horizontal_line/index.js","components/organisms/bubbles/index.js","components/organisms/css_configurator/index.js","components/organisms/routes/atoms/corner_button_container/index.js","components/organisms/routes/molecules/tutorial_button/index.js","components/templates/editor/index.js","components/pages/editor/index.js","components/organisms/routes/molecules/app_button/index.js","components/templates/tutorial/index.js","components/organisms/tutorial/atoms/paragraph/index.js","components/pages/tutorial/index.js","App.js","index.js"],"names":["module","exports","Title","props","className","TitleStyle","isAnimated","AnimatedStyle","TimelineStyle","BubblesStyle","ButtonContainer","ContainerStyle","onClick","testid","children","ColorSelector","type","ColorSelectorStyle","onChange","ev","onColorChange","target","value","color","NewButton","size","OpenButton","file_input","useRef","undefined","current","click","InputStyle","ref","accept","file","files","fr","FileReader","onload","onFileOpened","result","readAsText","SaveButton","PrintButton","Toolbar","theme","setTheme","primary","accent","isPrinting","bubbles","setBubbles","useEffect","html2canvas","document","querySelector","scrollX","window","scrollY","windowWidth","documentElement","offsetWidth","windowHeight","offsetHeight","then","canvas","toBlob","blob","FileSaver","saveAs","ToolbarStyle","content","obj","JSON","parse","alert","toSave","Blob","stringify","ImageButton","convertBase64","Promise","resolve","reject","fileReader","readAsDataURL","onerror","error","event","a","base64","onImageSelected","FileInputStyle","CommentImageButton","ButtonContainerStyle","image","TextButtonStyle","role","b64","Comment","useState","setImage","comment","isImage","textareaRef","innerHTML","identifier","updateBubble","CommentStyle","isEven","EvenCommentStyle","OddCommentStyle","src","ImageStyle","alt","TextareaStyle","onInput","contentEditable","spellCheck","HoveringButtonsStyle","Bubble","lastKey","setLastKey","title","inputRef","focus","onKeyDown","keyCode","KEY_BACK_SPACE","removeBubble","KEY_SHIFT","KEY_RETURN","addBubble","VerticalLine","VerticalLineStyle","EvenLineStyle","OddLineStyle","CommentedBubble","data","CommentedBubbleStyle","HorizontalLine","HorizontalLineStyle","Bubbles","length","filter","el","newBubbles","forEach","push","Date","getTime","map","getFullYear","b","i","CSSConfigurator","hexToRgb","m","match","r","parseInt","g","rgbToHex","toString","slice","blackOrWhiteRGB","blackOrWhite","min","v","Math","max","panelColor","CornerButtonContainer","to","href","TutorialButton","TemplateEditor","id","Editor","AppButton","TutorialTemplate","ArticleStyle","Paragraph","ParagraphStyle","Tutorial","rel","App","path","exact","ReactDOM","render","StrictMode","getElementById"],"mappings":"sHACAA,EAAOC,QAAU,CAAC,aAAe,4BAA4B,QAAU,uBAAuB,iBAAmB,gCAAgC,gBAAkB,+BAA+B,cAAgB,6BAA6B,qBAAuB,oCAAoC,WAAa,4B,iBCAvTD,EAAOC,QAAU,CAAC,WAAa,0BAA0B,cAAgB,6BAA6B,UAAY,yBAAyB,cAAgB,6BAA6B,aAAe,8B,iBCAvMD,EAAOC,QAAU,CAAC,qBAAuB,oCAAoC,gBAAkB,iC,iBCA/FD,EAAOC,QAAU,CAAC,kBAAoB,iCAAiC,QAAU,uBAAuB,cAAgB,6BAA6B,aAAe,8B,sBCApKD,EAAOC,QAAU,CAAC,eAAiB,8BAA8B,aAAe,8B,mBCAhFD,EAAOC,QAAU,CAAC,aAAe,8B,gBCAjCD,EAAOC,QAAU,CAAC,eAAiB,gC,gBCAnCD,EAAOC,QAAU,CAAC,mBAAqB,oC,gBCAvCD,EAAOC,QAAU,CAAC,WAAa,4B,iBCA/BD,EAAOC,QAAU,CAAC,eAAiB,gC,gBCAnCD,EAAOC,QAAU,CAAC,eAAiB,gC,iBCAnCD,EAAOC,QAAU,CAAC,eAAiB,gC,gBCAnCD,EAAOC,QAAU,CAAC,eAAiB,8BAA8B,QAAU,yB,gBCA3ED,EAAOC,QAAU,CAAC,qBAAuB,sC,gBCAzCD,EAAOC,QAAU,CAAC,oBAAsB,qC,gBCAxCD,EAAOC,QAAU,CAAC,eAAiB,gC,iBCAnCD,EAAOC,QAAU,CAAC,eAAiB,gC,2JCOpB,SAASC,EAAMC,GAE7B,OAAQ,8BAAK,sBAAKC,UAAW,SAAWC,aAAa,KAAOF,EAAMC,WAAa,KAC1ED,EAAMG,WAAaC,gBAAgB,IAD3B,UAEZ,oBAAIH,UAAWI,gBAAf,sBACA,sBAAMJ,UAAWK,eAAjB,0B,4CCLa,SAASC,EAAgBP,GAEvC,OAAO,qBACNC,UAAWO,iBACXC,QAAST,EAAMS,QACf,cAAaT,EAAMU,OAHb,SAILV,EAAMW,W,YCHM,SAASC,EAAcZ,GAQrC,OAAO,cAACO,EAAD,UACN,uBAAOM,KAAK,QACX,cAAab,EAAMU,OACnBT,UAAWa,qBAAqB,IAAMd,EAAMC,WAAa,GACzDc,SANF,SAAsBC,GAAKhB,EAAMiB,cAAcD,EAAGE,OAAOC,QAOvDA,MAAOnB,EAAMoB,OAAS,c,YChBV,SAASC,EAAUrB,GAEjC,OAAO,cAACO,EAAD,CACLE,QAAST,EAAMS,QACfC,OAAO,aAFF,SAGN,cAAC,IAAD,CAAMY,KAAK,a,oBCHE,SAASC,EAAWvB,GAElC,IAAMwB,EAAaC,sBAAOC,GA4B1B,OAAO,eAACnB,EAAD,CAAiBE,QALxB,SAAqBO,GACpBQ,EAAWG,QAAQR,MAAQ,KAC3BK,EAAWG,QAAQC,SAGb,UACN,uBAAO3B,UAAW4B,aACjBC,IAAKN,EACLX,KAAK,OACL,cAAY,aACZkB,OAAO,QACPhB,SA5BF,SAA0BC,GACzB,IAAD,EACOgB,EAAI,UAAGhB,EAAGE,cAAN,aAAG,EAAWe,MAAM,GAC9B,GAAID,EACJ,CACC,IAAME,EAAK,IAAIC,WACfD,EAAGE,OAAS,WACXpC,EAAMqC,aAAaH,EAAGI,SAEvBJ,EAAGK,WAAWP,OAoBf,cAAC,IAAD,CAASV,KAAK,c,YCvCD,SAASkB,EAAWxC,GAElC,OAAO,cAACO,EAAD,CACLE,QAAST,EAAMS,QACfC,OAAO,cAFF,SAGN,cAAC,IAAD,CAAMY,KAAK,a,YCLE,SAASmB,EAAYzC,GAEnC,OAAO,cAACO,EAAD,CAAiBE,QAAST,EAAMS,QAAhC,SACN,cAAC,IAAD,CAAWa,KAAK,a,qBCUH,SAASoB,EAAQ1C,GAC/B,IAAQ2C,EAAoB3C,EAApB2C,MAAOC,EAAa5C,EAAb4C,SACPC,EAAgCF,EAAhCE,QAASC,EAAuBH,EAAvBG,OAAQC,EAAeJ,EAAfI,WACjBC,EAAwBhD,EAAxBgD,QAASC,EAAejD,EAAfiD,WA+DjB,OAhBAC,qBAAU,WACLH,IACHI,IAAYC,SAASC,cAAc,YAAa,CAC/CC,SAAUC,OAAOD,QACjBE,SAAUD,OAAOC,QACjBC,YAAaL,SAASM,gBAAgBC,YACtCC,aAAcR,SAASM,gBAAgBG,eACrCC,MAAK,SAAAC,GACPA,EAAOC,QAAO,SAAAC,GACbC,IAAUC,OAAOF,EAAM,sBAGzBrB,EAAS,2BAAKD,GAAN,IAAaI,YAAY,QAEhC,CAACA,IAGH,qBAAK9C,UAAW,QAAhB,SACC,sBAAKA,UAAWmE,gBACdpE,EAAMC,WAAa,IADrB,UAEC,cAACW,EAAD,CAAeK,cA9DlB,SAAyBG,GAASwB,EAAS,2BAAKD,GAAN,IAAaE,QAASzB,MA+D5DA,MAAOyB,EAASnC,OAAO,qBACxB,cAACE,EAAD,CAAeK,cA5DlB,SAAwBG,GAASwB,EAAS,2BAAKD,GAAN,IAAaG,OAAQ1B,MA6D1DA,MAAO0B,EAAQpC,OAAO,oBACvB,cAACW,EAAD,CAAWZ,QAxDd,SAA4BO,GAAMiC,EAAW,OAyD1C,cAAC1B,EAAD,CAAYc,aAxCf,SAA0BgC,GACzB,IAAMC,EAAMC,KAAKC,MAAMH,GACnBC,EAAI3B,OAAS2B,EAAItB,SACpBJ,EAAS0B,EAAI3B,OACbM,EAAWqB,EAAItB,UAGfyB,MAAM,sCAkCL,cAACjC,EAAD,CAAY/B,QApDf,SAA6BO,GAC5B,IAAM0D,EAAS,IAAIC,KAAK,CAACJ,KAAKK,UAAU,CAAEjC,QAAOK,aAChD,CAAEnC,KAAM,6BACTqD,IAAUC,OAAOO,EAAQ,mBAkDvB,cAACjC,EAAD,CAAahC,QA5BhB,SAA0BO,GAAM4B,EAAS,2BAAKD,GAAN,IAAaI,YAAY,a,qDC5DnD,SAAS8B,EAAY7E,GAWnC,SAAS8E,EAAc9C,GACtB,OAAO,IAAI+C,SAAQ,SAACC,EAASC,GAC5B,IAAMC,EAAa,IAAI/C,WACvB+C,EAAWC,cAAcnD,GACzBkD,EAAW9C,OAAS,WACnB4C,EAAQE,EAAW5C,SAEpB4C,EAAWE,QAAU,SAACC,GACrBJ,EAAOI,OAnBgC,4CA4B1C,WAA8BC,GAA9B,mBAAAC,EAAA,2DACOvD,EADP,UACcsD,EAAMpE,cADpB,aACc,EAAce,MAAM,IADlC,gCAIuB6C,EAAc9C,GAJrC,OAIQwD,EAJR,OAKExF,EAAMyF,gBAAgBD,GALxB,4CA5B0C,sBAqC1C,OACC,wBAAOvF,UAAWD,EAAMC,UAAxB,UACC,uBAAOA,UAAWyF,iBACjB7E,KAAK,OACLkB,OAAO,UACP,cAAY,yBACZhB,SA3CuC,8CA4CvCf,EAAMW,Y,YC1CK,SAASgF,EAAmB3F,GAa1C,OACC,qBAAKC,UAAW2F,uBAAuB,WAAa5F,EAAMC,WAAa,IAAvE,SAEGD,EAAM6F,MAIN,sBAAMpF,QATV,WAA8BT,EAAMyF,gBAAgB,KAU/CxF,UAAW6F,kBACX,cAAY,yBACZC,KAAK,SAHN,kBAHA,cAAClB,EAAD,CAAaY,gBAXjB,SAA6BO,GAAMhG,EAAMyF,gBAAgBO,IAYpD/F,UAAW6F,kBADZ,qB,YCXU,SAASG,EAAQjG,GAC/B,MAA0BkG,mBAAS,MAAnC,mBAAOL,EAAP,KAAcM,EAAd,KAKQC,EAAqBpG,EAArBoG,QAASC,EAAYrG,EAAZqG,QACXC,EAAc7E,sBAAOC,GAC3BwB,qBAAU,WAEJmD,EACHF,EAASC,GACFE,EAAY3E,SAAWyE,IAAYE,EAAY3E,QAAQ4E,YAC9DD,EAAY3E,QAAQ4E,UAAYH,KAGhC,CAACA,EAASC,IAGbnD,qBAAU,WACLoD,GAAeF,IAClBE,EAAY3E,QAAQ4E,UAAYH,KAC/B,IAGH,IAAQI,EAA6BxG,EAA7BwG,WAAYC,EAAiBzG,EAAjByG,aAiBpB,OAhBAvD,qBAAU,WACK,OAAV2C,GACHY,EAAaD,EAAY,CACxBH,QAAmB,KAAVR,EACTO,QAASP,MAET,CAACA,IAWH,sBAAK5F,UAAWyG,eAAe,kBAC7B1G,EAAM2G,OAASC,mBAAmBC,mBACnC,cAAY,UAFb,UAGGhB,EAQD,qBAAKiB,IAAKjB,EAAO5F,UAAW8G,aAC3B,cAAY,gBACZC,IAAI,WATL,qBAAKlF,IAAKwE,EACTrG,UAAWgH,gBACX,cAAY,mBACZC,QAZJ,SAA0BlG,GACzBhB,EAAMyG,aAAazG,EAAMwG,WAAY,CAAEH,SAAS,EAAOD,QAASpF,EAAGE,OAAOqF,aAYvEY,iBAAiB,EACjBC,YAAY,EACZrB,KAAK,YAKP,cAACJ,EAAD,CAAoBF,gBAAiBU,EAAUN,MAAOA,EACrD5F,UAAWoH,4B,oBC5DA,SAASC,EAAOtH,GAE9B,MAA8BkG,oBAAU,GAAxC,mBAAOqB,EAAP,KAAgBC,EAAhB,KAKQC,EAAUzH,EAAVyH,MACFC,EAAWjG,sBAAOC,GA2CxB,OA1CAwB,qBAAU,WAELwE,EAAS/F,SAAW8F,IAAUC,EAAS/F,QAAQ4E,YACjDmB,EAAS/F,QAAQ4E,UAAYkB,KAG7B,CAACA,IAgCJvE,qBAAU,WACTwE,EAAS/F,QAAQgG,UACf,IAGF,qBAAK7F,IAAK4F,EACTzH,UAAW,gBAAkBO,iBAC7B,cAAY,SACZ2G,iBAAiB,EACjBD,QAnBF,SAAsBlG,GAEO,mCAAxBA,EAAGE,OAAOqF,UACbvG,EAAMyG,aAAazG,EAAMwG,WACxB,CAACiB,MAAOzG,EAAGE,OAAOqF,YAEnBvF,EAAGE,OAAOqF,UAAY,IActBqB,UApCF,SAAuB5G,GAEtBwG,EAAWxG,EAAG6G,SAEV7G,EAAG6G,UAAYC,KACa,KAA/BJ,EAAS/F,QAAQ4E,UACZ,OAALvG,QAAK,IAALA,KAAO+H,aAAa/H,EAAMwG,YAEnBe,IAAYS,KAAahH,EAAG6G,UAAYI,MAC1C,OAALjI,QAAK,IAALA,KAAOkI,UAAUlI,EAAMwG,cA4BvBY,YAAY,I,YCnEA,SAASe,EAAanI,GAEpC,OACC,qBAAKC,UAAWmI,oBAAoB,kBAClCpI,EAAM2G,OAAS0B,gBAAgBC,kB,YCOpB,SAASC,EAAgBvI,GAGvC,MAAgDA,EAAMwI,KAA9ChC,EAAR,EAAQA,WAAYiB,EAApB,EAAoBA,MAAOpB,EAA3B,EAA2BA,QAASD,EAApC,EAAoCA,QAEpC,OACC,sBAAKnG,UAAWwI,uBAAhB,UACC,cAACnB,EAAD,CAAQY,UAAWlI,EAAMkI,UACvBH,aAAc/H,EAAM+H,aACpBtB,aAAczG,EAAMyG,aACpBD,WAAYA,EACZiB,MAAOA,IAET,cAACU,EAAD,CAAcxB,OAAQ3G,EAAM2G,SAC5B,cAACV,EAAD,CAASO,WAAYA,EACnBG,OAAQ3G,EAAM2G,OACdF,aAAczG,EAAMyG,aACpBJ,QAASA,EACTD,QAASA,O,YC/BC,SAASsC,IAEvB,OAAO,qBAAKzI,UAAW0I,wBCKT,SAASC,EAAQ5I,GAE/B,IAAQgD,EAAwBhD,EAAxBgD,QAASC,EAAejD,EAAfiD,WAuBjB,SAAS8E,EAAavB,GAElBxD,EAAQ6F,OAAS,GACnB5F,EAAWD,EAAQ8F,QAAO,SAAAC,GACzB,OAAOvC,IAAeuC,EAAGvC,eAQ5B,SAAS0B,EAAU1B,GAElB,IAAMwC,EAAa,GACnBhG,EAAQiG,SAAQ,SAAAF,GACXA,EAAGvC,aAAeA,EACrBwC,EAAWE,KAAKH,IAGhBC,EAAWE,KAAKH,GAChBC,EAAWE,KAAK,CACf1C,YAvCuB,IAAI2C,MAAOC,UAwClC3B,MAAO,GACPpB,SAAS,EACTD,QAAS,SAIZnD,EAAW+F,GAUZ,SAASvC,EAAaD,EAAYnC,GAEjCpB,EAAWD,EAAQqG,KAAI,SAAAN,GAGtB,OAFIA,EAAGvC,aAAeA,IACrBuC,EAAE,2BAAOA,GAAO1E,IACV0E,MAIT,OA9DA7F,qBAAU,WACc,IAAnBF,EAAQ6F,QACX5F,EAAW,CAAC,CACVuD,YAAY,IAAI2C,MAAOC,UACvB3B,MAAM,GAAD,QAAM,IAAI0B,MAAQG,eACvBjD,SAAS,EACTD,QAAS,+DAEV,CAACpD,EAASC,IAuDZ,sBAAKhD,UAAW,iBAAmBO,iBAClC,cAAY,oBADb,UAEEwC,EAAQqG,KAAI,SAACE,EAAGC,GAAJ,OACZ,cAACjB,EAAD,CACCC,KAAMe,EACNrB,UAAWA,EACXH,aAAcA,EACdtB,aAAcA,EACdE,OAAQ6C,EAAI,IAAM,GALGD,EAAE/C,eAOzB,cAACkC,EAAD,OCxFY,SAASe,EAAgBzJ,GACvC,MAAwCA,EAAM2C,MAAtCE,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,OAAQC,EAAzB,EAAyBA,WAYzB,SAAS2G,EAAStI,GACjB,IAAMuI,EAAIvI,EAAMwI,MAAM,6CACtB,MAAO,CACNC,EAAGC,SAASH,EAAE,GAAI,IAClBI,EAAGD,SAASH,EAAE,GAAI,IAClBJ,EAAGO,SAASH,EAAE,GAAI,KAiBpB,SAASK,EAASH,EAAGE,EAAGR,GACvB,MAAO,MAAQ,GAAK,KAAOM,GAAK,KAAOE,GAAK,GAAKR,GAAGU,SAAS,IAAIC,MAAM,EAAE,GAU1E,SAASC,EAAgBN,EAAGE,EAAGR,GAE9B,OADiB,IAAJM,EAAc,IAAJE,EAAc,IAAJR,GAAW,KAC7B,IAAO,UAAY,UAanC,SAASa,EAAahJ,GACrB,MAAoBsI,EAAStI,GAC7B,OAAO+I,EADP,EAAQN,EAAR,EAAWE,EAAX,EAAcR,GAsBf,OACC,uBAAO,cAAY,cAAnB,iEAGkBzG,EAHlB,4CAdD,SAAoB1B,GAEnB,MAAkBsI,EAAStI,GAApByI,EAAP,EAAOA,EAAGE,EAAV,EAAUA,EAAGR,EAAb,EAAaA,EAEPc,EAAM,SAACC,GAAD,OAAOC,KAAKC,IAAIF,EADb,GACyB,IAClCE,EAAM,SAACF,GAAD,OAAOC,KAAKF,IAAIC,EAFb,GAEyB,MAExC,MAAiC,YAA7BH,EAAgBN,EAAGE,EAAGR,GAClBS,EAASK,EAAIR,GAAIQ,EAAIN,GAAIM,EAAId,IAE7BS,EAASQ,EAAIX,GAAIW,EAAIT,GAAIS,EAAIjB,IASbkB,CAAW3H,GALnC,0CAMwBsH,EAAatH,GANrC,6CAQyBD,EARzB,2CASyBuH,EAAavH,GATtC,oCAWUE,EAAa,4BAA8B,GAXrD,kCAYiBA,EAAa,8BAAgC,GAZ9D,mCAakBA,EAAa,+BAAiC,GAbhE,a,8BCpFa,SAAS2H,GAAsB1K,GAE7C,OAAO,cAAC,KAAD,CAAM2K,GAAI3K,EAAM4K,KACpB,cAAa5K,EAAMU,OACnBT,UAAW,SAAWO,kBAFlB,SAGLR,EAAMW,WCRM,SAASkK,KAEvB,OAAO,cAACH,GAAD,CACLE,KAAK,YACLlK,OAAO,wBAFF,SAGN,cAAC,IAAD,CAAMY,KAAK,WCAE,SAASwJ,KAKvB,MAA0B5E,mBAAS,CAClCrD,QAAS,UACTC,OAAQ,UACRC,YAAY,IAHb,mBAAOJ,EAAP,KAAcC,EAAd,KAQA,EAA8BsD,mBAAS,IAAvC,mBAAOlD,EAAP,KAAgBC,EAAhB,KAEA,OAAQ,uBAAM8H,GAAG,UAAU9K,UAAWO,iBAA9B,UACL,cAACiJ,EAAD,CAAiB9G,MAAOA,IACxB,cAAC5C,EAAD,CAAOI,YAAY,IACnB,cAACyI,EAAD,CAAS5F,QAASA,EAASC,WAAYA,IACvC,cAACP,EAAD,CAASM,QAASA,EAASC,WAAYA,EACtCN,MAAOA,EAAOC,SAAUA,IACzB,cAACiI,GAAD,OC1BW,SAASG,KAEvB,OAAO,cAACF,GAAD,I,sBCFO,SAASG,KAEvB,OAAO,cAACP,GAAD,CACLE,KAAK,IACLlK,OAAO,mBAFF,SAGN,cAAC,KAAD,CAAiBY,KAAK,WCDT,SAAS4J,GAAiBlL,GAOxC,OAAO,uBAAMC,UAAWO,kBAAjB,UACN,cAACiJ,EAAD,CAAiB9G,MANJ,CACbE,QAAS,UACTC,OAAQ,aAKR,cAAC/C,EAAD,IACA,cAACkL,GAAD,IACA,yBAAShL,UAAWkL,gBAApB,SACEnL,EAAMW,c,aCfK,SAASyK,GAAUpL,GAEjC,OAAO,qBAAKC,UAAWoL,kBAAhB,SACLrL,EAAMW,WCPM,SAAS2K,KACvB,OAAO,eAACJ,GAAD,WACN,oBAAI,cAAY,YAAhB,uBACA,8GAGA,6IAIA,qDACA,sJAIA,0DACA,mTAMA,wDACA,6IAIA,uCACA,eAACE,GAAD,WACC,gDACA,wLAKA,eAACA,GAAD,WACC,yCACA,uJAEqD,mDAGtD,eAACA,GAAD,WACC,iDACA,gJAEiC,sCAFjC,OAIA,4BACC,sGAMF,eAACA,GAAD,WACC,mDACA,2HAEO,0CAFP,OAIA,4BAAG,2FAEJ,eAACA,GAAD,WACC,iDADD,wMAIC,eAACA,GAAD,WACC,yCACA,+GAGA,4BACC,0GAID,4BACC,wJAMF,eAACA,GAAD,WACC,gDACA,qMAGI,sCAHJ,oGAMA,4BAAG,kHAIH,4BAAG,kLAML,eAACA,GAAD,WACC,iDACA,qOAKA,eAACA,GAAD,WACC,sCAAQ,cAAC,IAAD,OACR,uLAKD,eAACA,GAAD,WACC,uCAAS,cAAC,IAAD,OACT,iIAKD,eAACA,GAAD,WACC,uCAAS,cAAC,IAAD,OACT,8IAKD,eAACA,GAAD,WACC,wCAAU,cAAC,IAAD,OACV,+IAMF,eAACA,GAAD,WACC,yCACA,+IAIA,eAACA,GAAD,WACC,qDACA,yIAKD,eAACA,GAAD,WACC,yDACA,4HAID,4BAAG,iLAML,eAACA,GAAD,WACC,yCACA,wFACC,mBAAGG,IAAI,aAAarK,OAAO,SAAS0J,KAAK,gDAAzC,gCAED,gF,YCxJYY,OAff,WACI,OACI,cAAC,KAAD,UACI,eAAC,KAAD,WACI,cAAC,KAAD,CAAOC,KAAK,IAAIC,OAAK,EAArB,SACI,cAACV,GAAD,MAEJ,cAAC,KAAD,CAAOS,KAAK,YAAZ,SACI,cAACH,GAAD,YCRpBK,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,GAAD,MAEJzI,SAAS0I,eAAe,W","file":"static/js/main.9ead4e57.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"CommentStyle\":\"style_CommentStyle__3KyR8\",\"created\":\"style_created__1lUxz\",\"EvenCommentStyle\":\"style_EvenCommentStyle__3hseG\",\"OddCommentStyle\":\"style_OddCommentStyle__249A4\",\"TextareaStyle\":\"style_TextareaStyle__1zglS\",\"HoveringButtonsStyle\":\"style_HoveringButtonsStyle__1qRk5\",\"ImageStyle\":\"style_ImageStyle__2U0pm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TitleStyle\":\"style_TitleStyle__3c13x\",\"AnimatedStyle\":\"style_AnimatedStyle__bWYNV\",\"TitleAnim\":\"style_TitleAnim__29B-N\",\"TimelineStyle\":\"style_TimelineStyle__3TDD4\",\"BubblesStyle\":\"style_BubblesStyle__3Bz_0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ButtonContainerStyle\":\"style_ButtonContainerStyle__2cFIY\",\"TextButtonStyle\":\"style_TextButtonStyle__30q6I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"VerticalLineStyle\":\"style_VerticalLineStyle__1NKKq\",\"created\":\"style_created__2P-kV\",\"EvenLineStyle\":\"style_EvenLineStyle__gWTvp\",\"OddLineStyle\":\"style_OddLineStyle__7wo6u\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContainerStyle\":\"style_ContainerStyle__3ciM7\",\"ArticleStyle\":\"style_ArticleStyle__3DIjP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ToolbarStyle\":\"style_ToolbarStyle__13tJJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContainerStyle\":\"style_ContainerStyle__3bT0x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ColorSelectorStyle\":\"style_ColorSelectorStyle__Bz__F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"InputStyle\":\"style_InputStyle__2ssjf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContainerStyle\":\"style_ContainerStyle__3HU5x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContainerStyle\":\"style_ContainerStyle__3hyhW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FileInputStyle\":\"style_FileInputStyle__1y9ob\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContainerStyle\":\"style_ContainerStyle__3HYGx\",\"created\":\"style_created__KD-VD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CommentedBubbleStyle\":\"style_CommentedBubbleStyle__BiORa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"HorizontalLineStyle\":\"style_HorizontalLineStyle__H5wgS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContainerStyle\":\"style_ContainerStyle__3i_iq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ParagraphStyle\":\"style_ParagraphStyle__320nS\"};","import { TitleStyle, TimelineStyle, BubblesStyle, AnimatedStyle } from './style.module.css'\r\n\r\n/**\r\n * A text used as a title for the application\r\n * @param {Object} props \r\n * @param {Boolean} props.isAnimated - animates title when it is mounted\r\n * @returns \r\n */\r\nexport default function Title(props)\r\n{\r\n\treturn (<div><div className={\"print \" + TitleStyle + \" \" + (props.className || \"\") +\r\n\t\t\t\t\t(props.isAnimated ? AnimatedStyle : \"\")}>\r\n\t\t<h1 className={TimelineStyle} >Timeline</h1>\r\n\t\t<span className={BubblesStyle}>Bubbles</span>\r\n\t</div></div>)\r\n}","import { ContainerStyle } from './style.module.css'\r\n\r\n/**\r\n * Contains buttons for toolbar with desired padding and invisible style\r\n * @param {Object} param\r\n * @param {Object} param.children\r\n * @param {Function(ev)} param.onClick\r\n */\r\nexport default function ButtonContainer(props)\r\n{\r\n\treturn <div \r\n\t\tclassName={ContainerStyle} \r\n\t\tonClick={props.onClick}\r\n\t\tdata-testid={props.testid}>\r\n\t\t{props.children}\r\n\t</div>\r\n}","import ButtonContainer from '../../atoms/button_container'\r\nimport { ColorSelectorStyle } from './style.module.css'\r\n\r\n/** \r\n * A button used for selecting color. Should be used in a toolbar\r\n * @param {Object} props\r\n * @param {String} props.color\r\n * @param {Function(colorHex: String)} props.onColorChange - \r\n * Triggered whenever the user changes the color\r\n * @param {String} props.className\r\n */\r\nexport default function ColorSelector(props)\r\n{\r\n\t/**\r\n\t * Sets the color whenever the user changes an input color\r\n\t * @param {Event} ev \r\n\t */\r\n\tfunction handleChange(ev){ props.onColorChange(ev.target.value) }\r\n\r\n\treturn <ButtonContainer>\r\n\t\t<input type=\"color\" \r\n\t\t\tdata-testid={props.testid}\r\n\t\t\tclassName={ColorSelectorStyle + \" \" + props.className || \"\"}\r\n\t\t\tonChange={handleChange}\r\n\t\t\tvalue={props.color || \"#000000\"}\r\n\t\t></input>\r\n\t</ButtonContainer>\r\n}","import { Plus } from \"react-bootstrap-icons\"\r\nimport ButtonContainer from \"../../atoms/button_container\"\r\n\r\n/**\r\n * A plus button used as a new file button\r\n * @param {Object} props\r\n * @param {Function(ev: Object)} props.onClick\r\n */\r\nexport default function NewButton(props)\r\n{\r\n\treturn <ButtonContainer \r\n\t\t\tonClick={props.onClick}\r\n\t\t\ttestid=\"new-button\">\r\n\t\t<Plus size=\"2.2rem\"></Plus>\r\n\t</ButtonContainer>\r\n}","import { useRef } from 'react'\r\nimport { Folder2 } from \"react-bootstrap-icons\"\r\nimport ButtonContainer from \"../../atoms/button_container\"\r\nimport { InputStyle } from './style.module.css'\r\n\r\n/**\r\n * A folder button used as a new file button\r\n * @param {Object} props\r\n * @param {Function(content: String)} props.onFileOpened\r\n */\r\nexport default function OpenButton(props)\r\n{\r\n\tconst file_input = useRef(undefined)\r\n\r\n\t/**\r\n\t * Triggers onFileOpened whenever the user selects a json file\r\n\t * @param {Object} ev \r\n\t */\r\n\tfunction handleFileOpened(ev)\r\n\t{\r\n\t\tconst file = ev.target?.files[0]\r\n\t\tif (file)\r\n\t\t{\r\n\t\t\tconst fr = new FileReader()\r\n\t\t\tfr.onload = () => {\r\n\t\t\t\tprops.onFileOpened(fr.result)\r\n\t\t\t}\r\n\t\t\tfr.readAsText(file)\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Triggers the input type file\r\n\t * @param {Object} ev \r\n\t */\r\n\tfunction handleClick(ev){ \r\n\t\tfile_input.current.value = null\r\n\t\tfile_input.current.click() \r\n\t}\r\n\r\n\treturn <ButtonContainer onClick={handleClick}>\r\n\t\t<input className={InputStyle}\r\n\t\t\tref={file_input} \r\n\t\t\ttype=\"file\" \r\n\t\t\tdata-testid=\"open-input\"\r\n\t\t\taccept=\".json\"\r\n\t\t\tonChange={handleFileOpened}></input>\r\n\t\t<Folder2 size=\"1.8rem\"></Folder2>\r\n\t</ButtonContainer>\r\n}","import { Save } from \"react-bootstrap-icons\"\r\nimport ButtonContainer from \"../../atoms/button_container\"\r\n\r\n/**\r\n * A save button used for file saving button\r\n * @param {Object} props\r\n * @param {Function(ev: Object)} props.onClick\r\n */\r\nexport default function SaveButton(props)\r\n{\r\n\treturn <ButtonContainer \r\n\t\t\tonClick={props.onClick}\r\n\t\t\ttestid=\"save-button\">\r\n\t\t<Save size=\"1.5rem\"></Save>\r\n\t</ButtonContainer>\r\n}","import { FileImage } from \"react-bootstrap-icons\"\r\nimport ButtonContainer from \"../../atoms/button_container\"\r\n\r\n/**\r\n * A folder button used as a new file button\r\n * @param {Object} props\r\n * @param {Function(ev: Object)} props.onClick\r\n */\r\nexport default function PrintButton(props)\r\n{\t\r\n\treturn <ButtonContainer onClick={props.onClick}>\r\n\t\t<FileImage size=\"1.6rem\"></FileImage>\r\n\t</ButtonContainer>\r\n}","import React, { useEffect } from 'react'\r\nimport { ToolbarStyle } from './style.module.css'\r\nimport FileSaver from 'file-saver'\r\nimport ColorSelector from './molecules/color_selector'\r\nimport NewButton from './molecules/new_button'\r\nimport OpenButton from './molecules/open_button'\r\nimport SaveButton from './molecules/save_button'\r\nimport PrintButton from './molecules/print_button'\r\nimport html2canvas from \"html2canvas/dist/html2canvas\"\r\n\r\n/**\r\n * Contains the new, open and save buttons and triggers for making a\r\n * rounded toolbar\r\n * @param {Object} props \r\n * @param {String} props.className \r\n * @param {Object} props.theme - Contains variables relative to the theme. e.g. colors\r\n * @param {Function(Object)} props.setTheme - Sets the theme state object\r\n * @param {Array} props.bubbles - Contains data relative to bubbles\r\n * @param {Function(Array)} props.setBubbles - Sets the bubbles array\r\n * @returns {Toolbar}\r\n */\r\nexport default function Toolbar(props) {\r\n\tconst { theme, setTheme } = props\r\n\tconst { primary, accent, isPrinting } = theme\r\n\tconst { bubbles, setBubbles } = props\r\n\r\n\t/** Changes the primary color into the theme object\r\n\t * @param {String} color - hex color\r\n\t */\r\n\tfunction setPrimaryColor(color) { setTheme({ ...theme, primary: color }) }\r\n\t/** Changes the accent color into the theme object\r\n\t * @param {String} color - hex color\r\n\t */\r\n\tfunction setAccentColor(color) { setTheme({ ...theme, accent: color }) }\r\n\r\n\t/**\r\n\t * Clears the bubbles array when an user clicks the new button\r\n\t * @param {Object} ev \r\n\t */\r\n\tfunction handleNewFileClick(ev) { setBubbles([]) }\r\n\r\n\t/**\r\n\t * Saves bubbles array and theme into a json file when an user clicks the save button\r\n\t * @param {Object} ev \r\n\t */\r\n\tfunction handleSaveFileClick(ev) {\r\n\t\tconst toSave = new Blob([JSON.stringify({ theme, bubbles })],\r\n\t\t\t{ type: 'text/plain;charset=utf-8' })\r\n\t\tFileSaver.saveAs(toSave, 'bubbles.json')\r\n\t}\r\n\r\n\t/**\r\n\t * Loads bubbles array and theme into the application when an user loads a file after \r\n\t * clicking the open button\r\n\t * @param {String} content - file content\r\n\t */\r\n\tfunction handleFileOpened(content) {\r\n\t\tconst obj = JSON.parse(content)\r\n\t\tif (obj.theme && obj.bubbles) {\r\n\t\t\tsetTheme(obj.theme)\r\n\t\t\tsetBubbles(obj.bubbles)\r\n\t\t}\r\n\t\telse\r\n\t\t\talert('Incompatible or corrupted file!')\r\n\t}\r\n\r\n\t/**\r\n\t * Prints the app page when an user clicks the print button\r\n\t * @param {Object} ev \r\n\t */\r\n\tfunction handlePrintClick(ev) { setTheme({ ...theme, isPrinting: true }) }\r\n\tuseEffect(() => {\r\n\t\tif (isPrinting) {\r\n\t\t\thtml2canvas(document.querySelector('#toPrint'), {\r\n\t\t\t\tscrollX: -window.scrollX,\r\n\t\t\t\tscrollY: -window.scrollY,\r\n\t\t\t\twindowWidth: document.documentElement.offsetWidth,\r\n\t\t\t\twindowHeight: document.documentElement.offsetHeight\r\n\t\t\t}).then(canvas => {\r\n\t\t\t\tcanvas.toBlob(blob => {\r\n\t\t\t\t\tFileSaver.saveAs(blob, \"timeline.png\")\r\n\t\t\t\t})\r\n\t\t\t})\r\n\t\t\tsetTheme({ ...theme, isPrinting: false })\r\n\t\t}\r\n\t}, [isPrinting]) // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n\treturn (\r\n\t\t<div className={\"print\"}>\r\n\t\t\t<div className={ToolbarStyle +\r\n\t\t\t\t(props.className || \"\")}>\r\n\t\t\t\t<ColorSelector onColorChange={setPrimaryColor}\r\n\t\t\t\t\tcolor={primary} testid=\"primary-selector\"></ColorSelector>\r\n\t\t\t\t<ColorSelector onColorChange={setAccentColor}\r\n\t\t\t\t\tcolor={accent} testid=\"accent-selector\"></ColorSelector>\r\n\t\t\t\t<NewButton onClick={handleNewFileClick}></NewButton>\r\n\t\t\t\t<OpenButton onFileOpened={handleFileOpened}></OpenButton>\r\n\t\t\t\t<SaveButton onClick={handleSaveFileClick}></SaveButton>\r\n\t\t\t\t<PrintButton onClick={handlePrintClick}></PrintButton>\r\n\t\t\t</div>\r\n\t\t</div>)\r\n}","import { FileInputStyle } from './style.module.css'\r\n\r\n/**\r\n * Image input that reads images as base64\r\n * @param {Object} props \r\n * @param {String} props.className\r\n * @param {Function(b64: String)} props.onImageSelected\r\n * @param {String} props.children\r\n * @returns \r\n */\r\nexport default function ImageButton(props) {\r\n\t/* \r\n\t * Snippet by Ankit Kumar Rajpoot\r\n\t * https://stackoverflow.com/questions/36580196/reactjs-base64-file-upload\r\n\t */\r\n\r\n\t/**\r\n\t * Reads a file image from disk\r\n\t * @param {Object} file \r\n\t * @returns \r\n\t */\r\n\tfunction convertBase64(file) {\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tconst fileReader = new FileReader()\r\n\t\t\tfileReader.readAsDataURL(file)\r\n\t\t\tfileReader.onload = () => {\r\n\t\t\t\tresolve(fileReader.result)\r\n\t\t\t}\r\n\t\t\tfileReader.onerror = (error) => {\r\n\t\t\t\treject(error)\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\t/**\r\n\t * Calls onImageSelected passing the base64 encoded file content\r\n\t * @param {Object} event \r\n\t */\r\n\tasync function handleOnChange(event) {\r\n\t\tconst file = event.target?.files[0]\r\n\t\tif (file)\r\n\t\t{\r\n\t\t\tconst base64 = await convertBase64(file)\r\n\t\t\tprops.onImageSelected(base64)\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<label className={props.className}>\r\n\t\t\t<input className={FileInputStyle} \r\n\t\t\t\ttype=\"file\" \r\n\t\t\t\taccept=\"image/*\"\r\n\t\t\t\tdata-testid=\"to_image_comment_input\"\r\n\t\t\t\tonChange={handleOnChange} />\r\n\t\t\t{props.children}\r\n\t\t</label>\r\n\t)\r\n}","import ImageButton from '../../atoms/image_button'\r\nimport { ButtonContainerStyle, TextButtonStyle } from './style.module.css'\r\n\r\n/**\r\n * Adds a button positioned at the bottom part of a container that converts an image to base64\r\n * @param {Object} props\r\n * @param {String} props.className\r\n * @param {Function(b64Image: String)} props.onImageSelected -\r\n * Executed whenever an image is selected.\r\n * @param {String} props.image - Stored b64 image\r\n * @returns \r\n */\r\nexport default function CommentImageButton(props)\r\n{\r\n\t/**\r\n\t * Fills the image variable with a b64 image\r\n\t * @param {String} b64 \r\n\t */\r\n\tfunction handleImageSelected(b64){ props.onImageSelected(b64) }\r\n\r\n\t/**\r\n\t * Cleans the image variable up\r\n\t */\r\n\tfunction clearImageHandler(){ props.onImageSelected('') }\r\n\r\n\treturn (\r\n\t\t<div className={ButtonContainerStyle + \" print \" + (props.className || \"\")}>\r\n\t\t\t{\r\n\t\t\t\t!props.image ? \r\n\t\t\t\t\t<ImageButton onImageSelected={handleImageSelected}\r\n\t\t\t\t\t\tclassName={TextButtonStyle}>\r\n\t\t\t\t\t\t\tImage</ImageButton> :\r\n\t\t\t\t\t<span onClick={clearImageHandler} \r\n\t\t\t\t\t\tclassName={TextButtonStyle}\r\n\t\t\t\t\t\tdata-testid=\"to_text_comment_button\"\r\n\t\t\t\t\t\trole=\"button\">Text</span>\r\n\t\t\t}\r\n\t\t</div>\r\n\t)\r\n}","import CommentImageButton from '../comment_image_button'\r\nimport {\r\n\tCommentStyle, TextareaStyle, EvenCommentStyle,\r\n\tOddCommentStyle, HoveringButtonsStyle, ImageStyle\r\n} from './style.module.css'\r\nimport { useEffect, useState, useRef } from 'react'\r\n\r\n/**\r\n * Adds a floating block with text over or under a bubble\r\n * @param {Object} props \r\n * @param {String} props.identifier - bubble identifier of the relative commented bubble\r\n * @param {String} props.comment - the state is gonna define the value of the textarea or\r\n * the image base64\r\n * @param {Boolean} props.isImage - if the comment state contains an image\r\n * @param {Function(identifier: int, data: Object)} props.updateBubble - will be called\r\n * whenever the user updates the content of a comment of a bubble\r\n * @returns \r\n */\r\nexport default function Comment(props) {\r\n\tconst [image, setImage] = useState(null)\r\n\r\n\t/**\r\n\t * Used to define the value of the textarea or image whenever the user opens a file\r\n\t */\r\n\tconst { comment, isImage } = props\r\n\tconst textareaRef = useRef(undefined)\r\n\tuseEffect(() => {\r\n\t\tconst handleChange = () => {\r\n\t\t\tif (isImage)\r\n\t\t\t\tsetImage(comment)\r\n\t\t\telse if(textareaRef.current && comment !== textareaRef.current.innerHTML)\r\n\t\t\t\ttextareaRef.current.innerHTML = comment\r\n\t\t}\r\n\t\thandleChange()\r\n\t}, [comment, isImage])\r\n\r\n\t/** Initializes the textarea with the initial value of comment */\r\n\tuseEffect(() => {\r\n\t\tif (textareaRef && comment)\r\n\t\t\ttextareaRef.current.innerHTML = comment\r\n\t}, []) // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n\t/** Updates the bubble comment if an image is added */\r\n\tconst { identifier, updateBubble } = props\r\n\tuseEffect(() => {\r\n\t\tif (image !== null)\r\n\t\t\tupdateBubble(identifier, { \r\n\t\t\t\tisImage: image !== '', \r\n\t\t\t\tcomment: image \r\n\t\t\t})\r\n\t}, [image]) // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n\t/**\r\n\t * Updates bubbles when the textarea is changed\r\n\t * @param {Object} ev \r\n\t */\r\n\tfunction handleTextChange(ev) {\r\n\t\tprops.updateBubble(props.identifier, { isImage: false, comment: ev.target.innerHTML })\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className={CommentStyle + \" disable-anim \" +\r\n\t\t\t(props.isEven ? EvenCommentStyle : OddCommentStyle)}\r\n\t\t\tdata-testid=\"comment\">\r\n\t\t\t{!image ?\r\n\t\t\t\t<div ref={textareaRef}\r\n\t\t\t\t\tclassName={TextareaStyle}\r\n\t\t\t\t\tdata-testid=\"comment_textarea\"\r\n\t\t\t\t\tonInput={handleTextChange}\r\n\t\t\t\t\tcontentEditable={true}\r\n\t\t\t\t\tspellCheck={false}\r\n\t\t\t\t\trole=\"textbox\"></div> :\r\n\t\t\t\t<img src={image} className={ImageStyle}\r\n\t\t\t\t\tdata-testid=\"comment_image\"\r\n\t\t\t\t\talt=\"Bubble\"></img>\r\n\t\t\t}\r\n\t\t\t<CommentImageButton onImageSelected={setImage} image={image}\r\n\t\t\t\tclassName={HoveringButtonsStyle}></CommentImageButton>\r\n\t\t</div>\r\n\t)\r\n}","import { useEffect, useRef, useState } from 'react'\r\nimport { ContainerStyle } from './style.module.css'\r\nimport { KEY_BACK_SPACE, KEY_RETURN, KEY_SHIFT } from 'keycode-js'\r\n\r\n/**\r\n * A bubble is a circular object displayed with a text in it\r\n * @param {Object} props\r\n * @param {String} props.title - the state is gonna set the value of a bubble\r\n * @param {Function(key: int)} props.addBubble - will be called whenever the user \r\n * press the return key\r\n * @param {Function(key: int)} props.removeBubble - will be called whenever the user\r\n * press backspace with the empty input field to a bubble the moment it is created\r\n * @param {Function(identifier: int, data: Object)} props.updateBubble - will be called\r\n * whenever the user updates the content of a comment of a bubble\r\n * @param {Int} props.identifier - key of a bubble in the bubbles array\r\n * @returns \r\n */\r\nexport default function Bubble(props) {\r\n\r\n\tconst [lastKey, setLastKey] = useState(-1)\r\n\r\n\t/**\r\n\t * Used to define the value of the textarea or image whenever the user opens a file\r\n\t */\r\n\tconst { title } = props\r\n\tconst inputRef = useRef(undefined)\r\n\tuseEffect(() => {\r\n\t\tconst handleChange = () => {\r\n\t\t\tif(inputRef.current && title !== inputRef.current.innerHTML)\r\n\t\t\t\tinputRef.current.innerHTML = title\r\n\t\t}\r\n\t\thandleChange()\r\n\t}, [title])\r\n\r\n\t/**\r\n\t * Removes or adds bubbles depending on the key pressed\r\n\t * @param {Object} event \r\n\t */\r\n\tfunction handleKeyDown(ev)\r\n\t{\r\n\t\tsetLastKey(ev.keyCode)\r\n\t\t// If backspace and input is empty, then remove\r\n\t\tif (ev.keyCode === KEY_BACK_SPACE && \r\n\t\t\tinputRef.current.innerHTML === \"\")\r\n\t\t\tprops?.removeBubble(props.identifier)\r\n\t\t// If the user press the return key, then create a new bubble\r\n\t\telse if(lastKey !== KEY_SHIFT && ev.keyCode === KEY_RETURN)\r\n\t\t\tprops?.addBubble(props.identifier)\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the bubble content\r\n\t * @param {Object} ev \r\n\t */\r\n\tfunction handleChange(ev)\r\n\t{\r\n\t\tif (ev.target.innerHTML !== \"<div><br></div><div><br></div>\")\r\n\t\t\tprops.updateBubble(props.identifier, \r\n\t\t\t\t{title: ev.target.innerHTML})\r\n\t\telse\r\n\t\t\tev.target.innerHTML = \"\"\r\n\t}\r\n\r\n\t// Focus when a new bubble is created\r\n\tuseEffect(() => {\r\n\t\tinputRef.current.focus()\r\n\t}, [])\r\n\r\n\treturn (\r\n\t\t<div ref={inputRef} \r\n\t\t\tclassName={'disable-anim ' + ContainerStyle}\r\n\t\t\tdata-testid=\"bubble\"\r\n\t\t\tcontentEditable={true}\r\n\t\t\tonInput={handleChange}\r\n\t\t\tonKeyDown={handleKeyDown}\r\n\t\t\tspellCheck={false}></div>)\r\n}","import { VerticalLineStyle, EvenLineStyle, OddLineStyle } from './style.module.css'\r\n\r\n/**\r\n * Adds a vertical line for being used between a bubble and a comment\r\n * @param {Object} props\r\n * @param {Boolean} props.isEven - used for positioning a vertical line\r\n * @returns \r\n */\r\nexport default function VerticalLine(props)\r\n{\r\n\treturn (\r\n\t\t<div className={VerticalLineStyle + \" disable-anim \" +\r\n\t\t\t(props.isEven ? EvenLineStyle : OddLineStyle)}>\r\n\t\t</div>\r\n\t)\r\n}","import Comment from '../../molecules/comment'\r\nimport Bubble from '../../molecules/bubble'\r\nimport VerticalLine from '../../atoms/vertical_line'\r\nimport { CommentedBubbleStyle } from './style.module.css'\r\n\r\n/**\r\n * Commented bubble is a mix of the three basic components: \r\n * bubble, vertical line, and comment\r\n * @param {Object} props \r\n * @param {Object} props.data - contains all data relative to a bubble\r\n * @param {Function(identifier: int)} props.addBubble - will be called whenever the user \r\n * press the return identifier\r\n * @param {Function(identifier: int)} props.removeBubble - will be called whenever the user\r\n * press backspace with the empty input field to a bubble the moment it is created\r\n * @param {Function(identifier: int, data: Object)} props.updateBubble - will be called\r\n * whenever the user updates the content of a comment of a bubble\r\n * @param {Boolean} props.isEven - translates the comment to above or below the bubble\r\n * @returns \r\n */\r\nexport default function CommentedBubble(props)\r\n{\r\n\t/** Dismantle data for sending it to the components */\r\n\tconst { identifier, title, isImage, comment } = props.data\r\n\r\n\treturn (\r\n\t\t<div className={CommentedBubbleStyle}>\r\n\t\t\t<Bubble addBubble={props.addBubble}\r\n\t\t\t\t\tremoveBubble={props.removeBubble}\r\n\t\t\t\t\tupdateBubble={props.updateBubble}\r\n\t\t\t\t\tidentifier={identifier}\r\n\t\t\t\t\ttitle={title}>\r\n\t\t\t</Bubble>\r\n\t\t\t<VerticalLine isEven={props.isEven}></VerticalLine>\r\n\t\t\t<Comment identifier={identifier}\r\n\t\t\t\t\tisEven={props.isEven}\r\n\t\t\t\t\tupdateBubble={props.updateBubble}\r\n\t\t\t\t\tisImage={isImage}\r\n\t\t\t\t\tcomment={comment}></Comment>\r\n\t\t</div>\r\n\t)\r\n}","import { HorizontalLineStyle } from './style.module.css'\r\n\r\n/**\r\n * Adds a horizontal line into the middle of a bubble container\r\n * @returns \r\n */\r\nexport default function HorizontalLine()\r\n{\r\n\treturn <div className={HorizontalLineStyle}></div>\r\n}","import { useEffect } from 'react'\r\nimport { ContainerStyle } from './style.module.css'\r\nimport CommentedBubble from './molecules/commented_bubble'\r\nimport HorizontalLine from './atoms/horizontal_line'\r\n\r\n/**\r\n * Stores all bubbles inside of it and aligns them\r\n * @param {Object} props \r\n * @param {Object} props.children\r\n * @param {Array} props.bubbles - Array containing bubbles data\r\n * @param {Function(Array)} props.setBubble - Function to update bubbles state array\r\n * @returns \r\n */\r\nexport default function Bubbles(props)\r\n{\r\n\tconst { bubbles, setBubbles } = props\r\n\r\n\t/**\r\n\t * Generates an unique id for a bubble\r\n\t * @returns Int\r\n\t */\r\n\tfunction nextId() { return new Date().getTime() }\r\n\r\n\t/** Detects if the array is empty or if it was cleared */\r\n\tuseEffect(() => {\r\n\t\tif (bubbles.length === 0)\r\n\t\t\tsetBubbles([{\r\n\t\t\t\t\tidentifier: new Date().getTime(), \r\n\t\t\t\t\ttitle: `${(new Date()).getFullYear()}`,\r\n\t\t\t\t\tisImage: false, \r\n\t\t\t\t\tcomment: '&nbsp;When you tried a new tool!&nbsp;<br>by nickolasrm'\r\n\t\t\t\t}])\r\n\t}, [bubbles, setBubbles])\r\n\r\n\t/**\r\n\t * Removes a bubble from the bubbles list\r\n\t * @param {Int} identifier - A bubble index\r\n\t */\r\n\tfunction removeBubble(identifier)\r\n\t{\r\n\t\tif(bubbles.length > 1)\r\n\t\t\tsetBubbles(bubbles.filter(el => {\r\n\t\t\t\treturn identifier !== el.identifier\r\n\t\t\t}))\r\n\t}\r\n\r\n\t/**\r\n \t * Adds a bubble into the bubbles list\r\n\t * @param {Int} identifier - A bubble key\r\n\t */\r\n\tfunction addBubble(identifier)\r\n\t{\r\n\t\tconst newBubbles = []\r\n\t\tbubbles.forEach(el => {\r\n\t\t\tif (el.identifier !== identifier)\r\n\t\t\t\tnewBubbles.push(el)\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tnewBubbles.push(el)\r\n\t\t\t\tnewBubbles.push({\r\n\t\t\t\t\tidentifier: nextId(),\r\n\t\t\t\t\ttitle: \"\",\r\n\t\t\t\t\tisImage: false,\r\n\t\t\t\t\tcomment: \"\"\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t})\r\n\t\tsetBubbles(newBubbles)\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the bubbles array when a bubble data is changed\r\n\t * @param {String} identifier \r\n\t * @param {Object} content \r\n\t * @param {Boolean} content.isImage\r\n\t * @param {String} content.data\r\n\t */\r\n\tfunction updateBubble(identifier, content)\r\n\t{\r\n\t\tsetBubbles(bubbles.map(el => {\r\n\t\t\tif (el.identifier === identifier)\r\n\t\t\t\tel = {...el, ...content}\r\n\t\t\treturn el\r\n\t\t}))\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className={'disable-trans ' + ContainerStyle}\r\n\t\t\tdata-testid=\"bubbles-container\">\r\n\t\t\t{bubbles.map((b, i) => \r\n\t\t\t\t<CommentedBubble key={b.identifier}\r\n\t\t\t\t\tdata={b}\r\n\t\t\t\t\taddBubble={addBubble}\r\n\t\t\t\t\tremoveBubble={removeBubble}\r\n\t\t\t\t\tupdateBubble={updateBubble}\r\n\t\t\t\t\tisEven={i % 2 === 0}></CommentedBubble>\r\n\t\t\t)}\r\n\t\t\t<HorizontalLine></HorizontalLine>\r\n\t\t</div>\r\n\t)\r\n}","/**\r\n * Sets up the css variables for the application\r\n * @param {Object} props \r\n * @param {Object} props.theme - An object containing the theme data\r\n * @param {String} props.theme.primary - HEX Color used as the main color. e.g. bubbles\r\n * @param {String} props.theme.accent - HEX Color used as the secondary color. e.g. background\r\n * @param {Boolean} props.theme.isPrinting - A boolean that makes panels transparent for printing\r\n * @returns \r\n */\r\nexport default function CSSConfigurator(props) {\r\n\tconst { primary, accent, isPrinting } = props.theme\r\n\r\n\t/* \r\n\t * Snippet by Paul .S\r\n\t * https://stackoverflow.com/questions/30970648/changing-hex-codes-to-rgb-values-with-javascript\r\n\t */\r\n\r\n\t/**\r\n\t * Converts a hex to rgb color\r\n\t * @param {String} color \r\n\t * @returns {Object} \r\n\t */\r\n\tfunction hexToRgb(color) {\r\n\t\tconst m = color.match(/^#?([\\da-f]{2})([\\da-f]{2})([\\da-f]{2})$/i)\r\n\t\treturn {\r\n\t\t\tr: parseInt(m[1], 16),\r\n\t\t\tg: parseInt(m[2], 16),\r\n\t\t\tb: parseInt(m[3], 16)\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/* \r\n\t * Snippet by Matt Stevens\r\n\t * https://stackoverflow.com/questions/5623838/rgb-to-hex-and-hex-to-rgb\r\n\t */\r\n\r\n\t/**\r\n\t * Converts rgb to hex\r\n\t * @param {Int} r \r\n\t * @param {Int} g \r\n\t * @param {Int} b \r\n\t * @returns {String} hex color\r\n\t */\r\n\tfunction rgbToHex(r, g, b){\r\n\t\treturn \"#\" + ((1 << 24) + (r << 16) + (g << 8) + b).toString(16).slice(1,7)\r\n\t}\r\n\r\n\t/**\r\n\t * Returns black or white depending on the luminosity of a color\r\n\t * @param {Int} r \r\n\t * @param {Int} g\r\n\t * @param {Int} b\r\n\t * @returns {String} hex color black or white\r\n\t */\r\n\tfunction blackOrWhiteRGB(r, g, b) {\r\n\t\tconst yiq = (r * 299 + g * 587 + b * 114) / 1000\r\n\t\treturn (yiq >= 128) ? '#000000' : '#ffffff'\r\n\t}\r\n\r\n\t/*\r\n\t * Snippets by Harthur\r\n\t * https://harthur.github.io/brain/\r\n\t */\r\n\r\n\t/**\r\n\t * Returns black or white depending on the luminosity of a color\r\n\t * @param {String} color - hex color\r\n\t * @returns {String} hex color\r\n\t */\r\n\tfunction blackOrWhite(color) {\r\n\t\tconst { r, g, b } = hexToRgb(color)\r\n\t\treturn blackOrWhiteRGB(r, g, b)\r\n\t}\r\n\r\n\t/**\r\n\t * Calculates the panel color based on another color\r\n\t * @param {String} color - hex color\r\n\t * @returns {String} hex color\r\n\t */\r\n\tfunction panelColor(color)\r\n\t{\r\n\t\tconst {r, g, b} = hexToRgb(color)\r\n\t\tconst factor = 25\r\n\t\tconst min = (v) => Math.max(v - factor, 0)\r\n\t\tconst max = (v) => Math.min(v + factor, 255)\r\n\r\n\t\tif (blackOrWhiteRGB(r, g, b) === '#000000')\r\n\t\t\treturn rgbToHex(min(r), min(g), min(b))\r\n\t\telse \r\n\t\t\treturn rgbToHex(max(r), max(g), max(b))\r\n\t}\r\n\r\n\treturn (\r\n\t\t<style data-testid=\"theme-style\">{`\r\n\t\t\t:root\r\n\t\t\t{\r\n\t\t\t\t--background: ${accent};\r\n\r\n\t\t\t\t--panel-background: ${panelColor(accent)};\r\n\t\t\t\t--panel-foreground: ${blackOrWhite(accent)};\r\n\r\n\t\t\t\t--bubble-background: ${primary};\r\n\t\t\t\t--bubble-foreground: ${blackOrWhite(primary)};\r\n\t\t\t}\r\n\t\t\t.print{${isPrinting ? \"display: none !important;\" : \"\"}}\r\n\t\t\t.disable-anim{${isPrinting ? \"animation: none !important;\" : \"\"}}\r\n\t\t\t.disable-trans{${isPrinting ? \"transition: none !important;\" : \"\"}}\r\n\t\t`}</style>)\r\n}","import { ContainerStyle } from './style.module.css'\r\nimport { Link } from 'react-router-dom'\r\n\r\n/**\r\n * Creates a container for a corner cropped top left positioned button container\r\n * @param {Object} props \r\n * @param {String} props.href\r\n * @param {Object} props.children\r\n * @returns \r\n */\r\nexport default function CornerButtonContainer(props)\r\n{\r\n\treturn <Link to={props.href} \r\n\t\t\t\tdata-testid={props.testid}\r\n\t\t\t\tclassName={\"print \" + ContainerStyle}>\r\n\t\t{props.children}\t\r\n\t</Link>\r\n}","import { Info } from 'react-bootstrap-icons'\r\nimport CornerButtonContainer from '../../atoms/corner_button_container'\r\n\r\n/**\r\n * Button that redirects to the tutorial route\r\n * @returns \r\n */\r\nexport default function TutorialButton()\r\n{\r\n\treturn <CornerButtonContainer\r\n\t\t\thref=\"/tutorial\"\r\n\t\t\ttestid=\"go-to-tutorial-button\">\r\n\t\t<Info size=\"2rem\"></Info>\r\n\t</CornerButtonContainer>\r\n}","import React, { useState } from 'react'\r\nimport Title from '../../organisms/title'\r\nimport Toolbar from '../../organisms/toolbar'\r\nimport { ContainerStyle } from './style.module.css'\r\nimport Bubbles from '../../organisms/bubbles'\r\nimport CSSConfigurator from '../../organisms/css_configurator'\r\nimport TutorialButton from '../../organisms/routes/molecules/tutorial_button'\r\n\r\n/**\r\n * Template app editor\r\n * @returns \r\n */\r\nexport default function TemplateEditor()\r\n{\r\n\t/**\r\n\t * Data for configuring app the user defined theme\r\n\t */\r\n\tconst [theme, setTheme] = useState({\r\n\t\tprimary: '#ffffff', \r\n\t\taccent: '#212529',\r\n\t\tisPrinting: false})\r\n\r\n\t/**\r\n\t * Stores bubbles data\r\n\t */\r\n\tconst [bubbles, setBubbles] = useState([])\r\n\r\n\treturn (<main id=\"toPrint\" className={ContainerStyle}>\r\n\t\t\t\t<CSSConfigurator theme={theme}></CSSConfigurator>\r\n\t\t\t\t<Title isAnimated={true}></Title>\r\n\t\t\t\t<Bubbles bubbles={bubbles} setBubbles={setBubbles}></Bubbles>\r\n\t\t\t\t<Toolbar bubbles={bubbles} setBubbles={setBubbles}\r\n\t\t\t\t\ttheme={theme} setTheme={setTheme}></Toolbar>\r\n\t\t\t\t<TutorialButton></TutorialButton>\r\n\t\t\t</main>)\r\n}","import React from 'react'\r\nimport TemplateEditor from '../../templates/editor/index'\r\n\r\n/**\r\n * Main editor page template\r\n * @returns \r\n */\r\nexport default function Editor()\r\n{\r\n\treturn <TemplateEditor></TemplateEditor>\r\n}","import { ArrowReturnLeft } from 'react-bootstrap-icons'\r\nimport CornerButtonContainer from '../../atoms/corner_button_container'\r\n\r\n/**\r\n * Button that redirects to the app route\r\n * @returns \r\n */\r\nexport default function AppButton()\r\n{\r\n\treturn <CornerButtonContainer\r\n\t\t\thref=\"/\"\r\n\t\t\ttestid=\"go-to-app-button\">\r\n\t\t<ArrowReturnLeft size=\"2rem\"></ArrowReturnLeft>\r\n\t</CornerButtonContainer>\r\n}","import { ContainerStyle, ArticleStyle } from './style.module.css'\r\nimport Title from '../../organisms/title'\r\nimport CSSConfigurator from '../../organisms/css_configurator'\r\nimport AppButton from '../../organisms/routes/molecules/app_button'\r\n\r\n/**\r\n * Template page for tutorial\r\n * @param {Object} props \r\n * @param {Object} props.children\r\n * @returns \r\n */\r\nexport default function TutorialTemplate(props)\r\n{\r\n\tconst theme = {\r\n\t\tprimary: '#ffffff', \r\n\t\taccent: '#212529',\r\n\t}\r\n\r\n\treturn <main className={ContainerStyle}>\r\n\t\t<CSSConfigurator theme={theme}></CSSConfigurator>\r\n\t\t<Title></Title>\r\n\t\t<AppButton></AppButton>\r\n\t\t<article className={ArticleStyle}>\r\n\t\t\t{props.children}\r\n\t\t</article>\r\n\t</main>\r\n}","import { ParagraphStyle } from './style.module.css'\r\n\r\n/**\r\n * Adds a div with left padding\r\n * @param {Object} props \r\n * @param {Object} props.children\r\n * @returns \r\n */\r\nexport default function Paragraph(props)\r\n{\r\n\treturn <div className={ParagraphStyle}>\r\n\t\t{props.children}\r\n\t</div>\r\n}","import { FileImage, Folder2, Plus, Save } from \"react-bootstrap-icons\"\r\nimport TutorialTemplate from \"../../templates/tutorial\"\r\nimport Paragraph from '../../organisms/tutorial/atoms/paragraph'\r\n\r\nexport default function Tutorial() {\r\n\treturn <TutorialTemplate>\r\n\t\t<h3 data-testid=\"greetings\">Greetings</h3>\r\n\t\t<p>\r\n\t\t\tHi ✋! My name is Nickolas, known as nickolasrm, the creator of this app.\r\n\t\t</p>\r\n\t\t<p>\r\n\t\t\tToday I'm gonna guide you through the\r\n\t\t\tusage of this simple, but elegant app that helps you making timelines.\r\n\t\t</p>\r\n\t\t<h3>What is a timeline?</h3>\r\n\t\t<p>\r\n\t\t\tA timeline is a solution for visualizing historical data in a form similar to the way we\r\n\t\t\tmeasure length with a ruler.\r\n\t\t</p>\r\n\t\t<h3>What is TimelineBubbles?</h3>\r\n\t\t<p>\r\n\t\t\tTimelineBubbles is a project I developed to reduce the amount of time I spend building\r\n\t\t\ttimelines for my presentations. Most of my presentations have a historical background,\r\n\t\t\tand because of that, I wasted lots of time building timelines. I just don't want it to\r\n\t\t\thappen again.\r\n\t\t</p>\r\n\t\t<h3>Should I use this app?</h3>\r\n\t\t<p>\r\n\t\t\tIf you're going to make a presentation or just want to create a historical representation,\r\n\t\t\tfor sure, use it!\r\n\t\t</p>\r\n\t\t<h3>Usage</h3>\r\n\t\t<Paragraph>\r\n\t\t\t<h4>Bubbles ◯</h4>\r\n\t\t\t<p>\r\n\t\t\t\tA bubble is a circle positioned on the middle of the screen\r\n\t\t\t\tused to represent a point in the timeline marked with a representative date\r\n\t\t\t\t(e.g. Jun/2021)\r\n\t\t\t</p>\r\n\t\t\t<Paragraph>\r\n\t\t\t\t<h5>Writing</h5>\r\n\t\t\t\t<p>\r\n\t\t\t\t\tTo change content of a bubble just select it and write something.\r\n\t\t\t\t\tYou can also add multiple lines into it by pressing <i>SHIFT+ENTER.</i>\r\n\t\t\t\t</p>\r\n\t\t\t</Paragraph>\r\n\t\t\t<Paragraph>\r\n\t\t\t\t<h5>Adding a bubble</h5>\r\n\t\t\t\t<p>\r\n\t\t\t\t\tTo add a bubble, you should first select one of them the same way you would do\r\n\t\t\t\t\tfor writing, and then, just hit <i>ENTER</i>.\r\n\t\t\t\t</p>\r\n\t\t\t\t<i>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\tA bubble will be added right after\r\n\t\t\t\t\t\tthe bubble you used to do it.\r\n\t\t\t\t\t</p>\r\n\t\t\t\t</i>\r\n\t\t\t</Paragraph>\r\n\t\t\t<Paragraph>\r\n\t\t\t\t<h5>Removing a bubble</h5>\r\n\t\t\t\t<p>\r\n\t\t\t\t\tTo remove a bubble, select the one you want to remove, clear its contents, and then\r\n\t\t\t\t\tpress <i>BACKSPACE</i>.\r\n\t\t\t\t</p>\r\n\t\t\t\t<p><i>NOTE: You cannot delete the bubble if it is the last.</i></p>\r\n\t\t\t</Paragraph>\r\n\t\t\t<Paragraph>\r\n\t\t\t\t<h4>Comments ▢</h4>\r\n\t\t\t\tA comment is a rounded rectangle connected by a vertical line to the bubble. This structure\r\n\t\t\t\tis where you put the description of what happened in a particular date or a representative image instead.\r\n\t\t\t\t<Paragraph>\r\n\t\t\t\t\t<h5>Writing</h5>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\tThe same thing you did with a bubble, but now selecting the rounded rectangle.\r\n\t\t\t\t\t</p>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\t<i>\r\n\t\t\t\t\t\t\tNOTE: To add a multiline description you don't need to use SHIFT ENTER.\r\n\t\t\t\t\t\t</i>\r\n\t\t\t\t\t</p>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\t<i>\r\n\t\t\t\t\t\t\tNOTE 2: If you write a text larger than the bubble size, it will adapt its\r\n\t\t\t\t\t\t\twidth to the content i.e. it will grow.\r\n\t\t\t\t\t\t</i>\r\n\t\t\t\t\t</p>\r\n\t\t\t\t</Paragraph>\r\n\t\t\t\t<Paragraph>\r\n\t\t\t\t\t<h5>Using an image</h5>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\tInstead of writing a description, you can add an image to describe your historical\r\n\t\t\t\t\t\tpoint. To do this, hover the comment with the cursor. Then, a button labelled \r\n\t\t\t\t\t\tby <i>Image</i> will appear at left side of the comment. Hit this button, and then select \r\n\t\t\t\t\t\tthe image you want.\r\n\t\t\t\t\t</p>\r\n\t\t\t\t\t<p><i>\r\n\t\t\t\t\t\tNOTE: If your image is too long, you may overlap other comments, so\r\n\t\t\t\t\t\tbe careful.\r\n\t\t\t\t\t</i></p>\r\n\t\t\t\t\t<p><i>\r\n\t\t\t\t\t\tNOTE 2: You can turn your comment back to text mode by hiting the button at\r\n\t\t\t\t\t\tthe same position as the one you pressed for adding an image.\r\n\t\t\t\t\t</i></p>\r\n\t\t\t\t</Paragraph>\r\n\t\t\t</Paragraph>\r\n\t\t\t<Paragraph>\r\n\t\t\t\t<h4>File operations</h4>\r\n\t\t\t\t<p>\r\n\t\t\t\t\tAfter making your timeline, perhaps you feel like you should save it (pretty obvious).\r\n\t\t\t\t\tAlso, you may need to load it, to export it, or to recreate it. All these operations are\r\n\t\t\t\t\tthe file operations.\r\n\t\t\t\t</p>\r\n\t\t\t\t<Paragraph>\r\n\t\t\t\t\t<h5>New <Plus></Plus></h5>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\tTo recreate your timeline from the beginning, just hit the Plus icon located at\r\n\t\t\t\t\t\tthe floating panel located at the right bottom part of your screen.\r\n\t\t\t\t\t</p>\r\n\t\t\t\t</Paragraph>\r\n\t\t\t\t<Paragraph>\r\n\t\t\t\t\t<h5>Save <Save></Save></h5>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\tTo save a timeline, just hit the Arrow Down icon located at the same\r\n\t\t\t\t\t\tpanel as the New button.\r\n\t\t\t\t\t</p>\r\n\t\t\t\t</Paragraph>\r\n\t\t\t\t<Paragraph>\r\n\t\t\t\t\t<h5>Open <Folder2></Folder2></h5>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\tTo open a previously saved timeline, just hit the Folder icon located at the same\r\n\t\t\t\t\t\tpanel as the New button.\r\n\t\t\t\t\t</p>\r\n\t\t\t\t</Paragraph>\r\n\t\t\t\t<Paragraph>\r\n\t\t\t\t\t<h5>Print <FileImage></FileImage></h5>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\tTo print your timeline to an image, just hit the Image icon located at the same panel\r\n\t\t\t\t\t\tas the New Button.\r\n\t\t\t\t\t</p>\r\n\t\t\t\t</Paragraph>\r\n\t\t\t</Paragraph>\r\n\t\t\t<Paragraph>\r\n\t\t\t\t<h4>Theming</h4>\r\n\t\t\t\t<p>\r\n\t\t\t\t\tWhat if all timelines have the same colors? Wouldn't it be sad? Theming\r\n\t\t\t\t\tis the way to customize your timeline.\r\n\t\t\t\t</p>\r\n\t\t\t\t<Paragraph>\r\n\t\t\t\t\t<h5>Bubble color ◯</h5>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\tTo change the bubble color, just hit the leftmost color selector at the same panel\r\n\t\t\t\t\t\tas the New Button.\r\n\t\t\t\t\t</p>\r\n\t\t\t\t</Paragraph>\r\n\t\t\t\t<Paragraph>\r\n\t\t\t\t\t<h5>Background color ◯</h5>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\tTo change the bubble color, just hit the color selector aside the bubble color selector.\r\n\t\t\t\t\t</p>\r\n\t\t\t\t</Paragraph>\r\n\t\t\t\t<p><i>\r\n\t\t\t\t\tNOTE: Don't worry about font color, it is changed to black and white automatically\r\n\t\t\t\t\tdepending on the luminosity of the colors you choose.\r\n\t\t\t\t</i></p>\r\n\t\t\t</Paragraph>\r\n\t\t</Paragraph>\r\n\t\t<Paragraph>\r\n\t\t\t<h3>Credits</h3>\r\n\t\t\t<p>If this app helped you in some way, don't forget to&nbsp;\r\n\t\t\t\t<a rel=\"noreferrer\" target=\"_blank\" href=\"https://github.com/nickolasrm/TimelineBubbles\">give it a star!</a>\r\n\t\t\t</p>\r\n\t\t\t<p>❤️ Made with love by nickolasrm</p>\r\n\t\t</Paragraph>\r\n\t</TutorialTemplate>\r\n}","import './App.css'\nimport Editor from './components/pages/editor'\nimport Tutorial from './components/pages/tutorial'\nimport { HashRouter, Route, Switch } from 'react-router-dom'\n\nfunction App() {\n    return (\n        <HashRouter>\n            <Switch>\n                <Route path=\"/\" exact>\n                    <Editor></Editor>\n                </Route>\n                <Route path=\"/tutorial\">\n                    <Tutorial></Tutorial>\n                </Route>\n            </Switch>\n        </HashRouter>\n    )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n)"],"sourceRoot":""}